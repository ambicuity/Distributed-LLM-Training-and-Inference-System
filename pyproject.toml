[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "llmctl"
version = "0.1.0"
description = "Distributed LLM Training and Inference System"
readme = "README.md"
authors = [
    {name = "LLMCtl Team", email = "team@llmctl.ai"}
]
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "toml>=0.10.0",
    "PyYAML>=6.0",
    "numpy>=1.21.0",
    "psutil>=5.9.0",
    "opentelemetry-api>=1.15.0",
    "opentelemetry-exporter-otlp>=1.15.0",
    "prometheus-client>=0.16.0",
    "boto3>=1.26.0",
    "datasets>=2.10.0",
    "tokenizers>=0.13.0",
    "safetensors>=0.3.0",
    "accelerate>=0.20.0",
    "deepspeed>=0.9.0",
    "flask>=2.3.0",
    "uvicorn>=0.22.0",
    "fastapi>=0.95.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.3.0",
]
distributed = [
    "mpi4py>=3.1.0",
    "nccl-pytorch>=2.18.0",
]
serving = [
    "vllm>=0.2.0",
    "tensorrt>=8.6.0",
    "onnx>=1.14.0",
    "onnxruntime>=1.15.0",
]

[project.urls]
Homepage = "https://github.com/ambicuity/Distributed-LLM-Training-and-Inference-System"
Repository = "https://github.com/ambicuity/Distributed-LLM-Training-and-Inference-System"
Issues = "https://github.com/ambicuity/Distributed-LLM-Training-and-Inference-System/issues"

[project.scripts]
llmctl = "llmctl.cli.main:app"

[project.entry-points."llmctl.plugins"]
kernels = "llmctl.plugins.kernels:register"
quantizers = "llmctl.plugins.quantizers:register"
exporters = "llmctl.plugins.exporters:register"
schedulers = "llmctl.plugins.schedulers:register"

[tool.setuptools.packages.find]
where = ["."]
include = ["llmctl*"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true